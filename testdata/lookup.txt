//go:build ignore

package main

import "fmt"

func Reachable() {
	fmt.Println("reachable")
}

func UnreachableGeneric[T comparable](a T) {
	fmt.Println(a)
}

type myString struct {
	Value string
}

func (s myString) String() string {
	return s.Value
}

func (s *myString) Unreachable() {
	return
}

type myGenericStruct[T any] struct {
	value T
}

func (gs myGenericStruct[T]) Value() T {
	return gs.value
}

func (gs *myGenericStruct[T]) Unreachable() {
	return
}
